/* esm.sh - esbuild bundle(openai@4.67.2/resources/beta/chat/completions) denonext production */
import{APIResource as a}from"/v135/openai@4.67.2/denonext/resource.js";import{ChatCompletionRunner as e}from"/v135/openai@4.67.2/denonext/lib/ChatCompletionRunner.js";import{ChatCompletionRunner as F}from"/v135/openai@4.67.2/denonext/lib/ChatCompletionRunner.js";import{ChatCompletionStreamingRunner as n}from"/v135/openai@4.67.2/denonext/lib/ChatCompletionStreamingRunner.js";import{ChatCompletionStreamingRunner as S}from"/v135/openai@4.67.2/denonext/lib/ChatCompletionStreamingRunner.js";import{ParsingFunction as g,ParsingToolFunction as P}from"/v135/openai@4.67.2/denonext/lib/RunnableFunction.js";import{ChatCompletionStream as m}from"/v135/openai@4.67.2/denonext/lib/ChatCompletionStream.js";import{parseChatCompletion as s,validateInputTools as l}from"/v135/openai@4.67.2/denonext/lib/parser.js";import{ChatCompletionStream as v}from"/v135/openai@4.67.2/denonext/lib/ChatCompletionStream.js";var o=class extends a{parse(t,r){return l(t.tools),this._client.chat.completions.create(t,{...r,headers:{...r?.headers,"X-Stainless-Helper-Method":"beta.chat.completions.parse"}})._thenUnwrap(i=>s(i,t))}runFunctions(t,r){return t.stream?n.runFunctions(this._client,t,r):e.runFunctions(this._client,t,r)}runTools(t,r){return t.stream?n.runTools(this._client,t,r):e.runTools(this._client,t,r)}stream(t,r){return m.createChatCompletion(this._client,t,r)}};export{F as ChatCompletionRunner,v as ChatCompletionStream,S as ChatCompletionStreamingRunner,o as Completions,g as ParsingFunction,P as ParsingToolFunction};
//# sourceMappingURL=completions.js.map