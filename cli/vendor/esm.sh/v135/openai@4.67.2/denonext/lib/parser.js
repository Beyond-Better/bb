/* esm.sh - esbuild bundle(openai@4.67.2/lib/parser) denonext production */
import{ContentFilterFinishReasonError as u,LengthFinishReasonError as l,OpenAIError as s}from"/v135/openai@4.67.2/denonext/error.js";function _(n,e){let t={...n};return Object.defineProperties(t,{$brand:{value:"auto-parseable-response-format",enumerable:!1},$parseRaw:{value:e,enumerable:!1}}),t}function f(n){return n?.$brand==="auto-parseable-response-format"}function d(n,{parser:e,callback:t}){let r={...n};return Object.defineProperties(r,{$brand:{value:"auto-parseable-tool",enumerable:!1},$parseRaw:{value:e,enumerable:!1},$callback:{value:t,enumerable:!1}}),r}function o(n){return n?.$brand==="auto-parseable-tool"}function g(n,e){return!e||!m(e)?{...n,choices:n.choices.map(t=>({...t,message:{...t.message,parsed:null,tool_calls:t.message.tool_calls??[]}}))}:i(n,e)}function i(n,e){let t=n.choices.map(r=>{if(r.finish_reason==="length")throw new l;if(r.finish_reason==="content_filter")throw new u;return{...r,message:{...r.message,tool_calls:r.message.tool_calls?.map(a=>c(e,a))??[],parsed:r.message.content&&!r.message.refusal?p(e,r.message.content):null}}});return{...n,choices:t}}function p(n,e){return n.response_format?.type!=="json_schema"?null:n.response_format?.type==="json_schema"?"$parseRaw"in n.response_format?n.response_format.$parseRaw(e):JSON.parse(e):null}function c(n,e){let t=n.tools?.find(r=>r.function?.name===e.function.name);return{...e,function:{...e.function,parsed_arguments:o(t)?t.$parseRaw(e.function.arguments):t?.function.strict?JSON.parse(e.function.arguments):null}}}function w(n,e){if(!n)return!1;let t=n.tools?.find(r=>r.function?.name===e.function.name);return o(t)||t?.function.strict||!1}function m(n){return f(n.response_format)?!0:n.tools?.some(e=>o(e)||e.type==="function"&&e.function.strict===!0)??!1}function h(n){for(let e of n??[]){if(e.type!=="function")throw new s(`Currently only \`function\` tool types support auto-parsing; Received \`${e.type}\``);if(e.function.strict!==!0)throw new s(`The \`${e.function.name}\` tool is not marked with \`strict: true\`. Only strict function tools can be auto-parsed`)}}export{m as hasAutoParseableInput,f as isAutoParsableResponseFormat,o as isAutoParsableTool,_ as makeParseableResponseFormat,d as makeParseableTool,g as maybeParseChatCompletion,i as parseChatCompletion,w as shouldParseToolCall,h as validateInputTools};
//# sourceMappingURL=parser.js.map